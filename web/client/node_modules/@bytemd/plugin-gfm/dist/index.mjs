import remarkGfm from "remark-gfm";
const icons = {
  Strikethrough: '<svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" fill="none" viewBox="0 0 48 48"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M5 24h38M24 24c16 6 10 20 0 20s-12-8-12-8M36 12s-3-8-12-8-12.564 7.6-8.39 14"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M12 36s4 8 12 8 12.564-7.6 8.39-14"/></svg>',
  CheckCorrect: '<svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" fill="none" viewBox="0 0 48 48"><g stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-path="url(#a)"><path d="M42 20v19a3 3 0 0 1-3 3H9a3 3 0 0 1-3-3V9a3 3 0 0 1 3-3h21"/><path d="m16 20 10 8L41 7"/></g><defs><clipPath id="a"><path fill="currentColor" d="M0 0h48v48H0z"/></clipPath></defs></svg>',
  InsertTable: '<svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" fill="none" viewBox="0 0 48 48"><path stroke="currentColor" stroke-width="4" d="M39.3 6H8.7A2.7 2.7 0 0 0 6 8.7v30.6A2.7 2.7 0 0 0 8.7 42h30.6a2.7 2.7 0 0 0 2.7-2.7V8.7A2.7 2.7 0 0 0 39.3 6Z"/><path stroke="currentColor" stroke-linecap="round" stroke-width="4" d="M18 6v36M30 6v36M6 18h36M6 30h36"/></svg>'
};
const strike = "Strikethrough";
const strikeText = "text";
const table = "Table";
const tableHeading = "Heading";
const task = "Task list";
const taskText = "todo";
const en = {
  strike,
  strikeText,
  table,
  tableHeading,
  task,
  taskText
};
function gfm({
  locale: _locale,
  ...remarkGfmOptions
} = {}) {
  const locale = { ...en, ..._locale };
  return {
    remark: (processor) => processor.use(remarkGfm, remarkGfmOptions),
    actions: [
      {
        title: locale.strike,
        icon: icons.Strikethrough,
        cheatsheet: `~~${locale.strikeText}~~`,
        handler: {
          type: "action",
          click({ wrapText, editor }) {
            wrapText("~~");
            editor.focus();
          }
        }
      },
      {
        title: locale.task,
        icon: icons.CheckCorrect,
        cheatsheet: `- [ ] ${locale.taskText}`,
        handler: {
          type: "action",
          click({ replaceLines, editor }) {
            replaceLines((line) => "- [ ] " + line);
            editor.focus();
          }
        }
      },
      {
        title: locale.table,
        icon: icons.InsertTable,
        handler: {
          type: "action",
          click({ editor, appendBlock, codemirror }) {
            const { line } = appendBlock(
              `| ${locale.tableHeading} |  |
| --- | --- |
|  |  |
`
            );
            editor.setSelection(
              codemirror.Pos(line, 2),
              codemirror.Pos(line, 2 + locale.tableHeading.length)
            );
            editor.focus();
          }
        }
      }
    ]
  };
}
export {
  gfm as default
};
